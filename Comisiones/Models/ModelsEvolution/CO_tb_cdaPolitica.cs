//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Comisiones.Models.ModelsEvolution
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class CO_tb_cdaPolitica
    {
        public int Id_Politica { get; set; }
        public string Descripcion { get; set; }
        public string Descripcion_corta { get; set; }
        //[DisplayFormat(DataFormatString = "{0:F0}")]
        [DisplayFormat(DataFormatString = "{0:##,###,###.###}")]
        [DisplayName("Monto")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public decimal Monto { get; set; }
        [DisplayFormat(DataFormatString = "{0:##,###,###.###}")]
        //[DisplayFormat(DataFormatString = "{0:F0}")]
        [DisplayName("Cantidad")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public decimal Cantidad { get; set; }
        //[DisplayFormat(DataFormatString = "{0:F0}")]
        [DisplayFormat(DataFormatString = "{0:##,###,###.###}")]
        [DisplayName("Cantidad Topada")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public decimal Cantidad_Topada { get; set; }
        [DisplayFormat(DataFormatString = "{0:F0}")]
        [DisplayName("Id de la Percepcion")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public int id_percepcion { get; set; }

        public int id_estatus { get; set; }

        //[DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [DisplayName("Fecha de Vigencia")]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:yyyy-MM-dd}")]
        [DataType(DataType.Date)]
        public Nullable<System.DateTime> f_Vigencia { get; set; }

        public string UltMod_Usuario { get; set; }
        public Nullable<System.DateTime> UltMod_F { get; set; }
    }
}
