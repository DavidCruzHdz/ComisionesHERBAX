@model Comisiones.Models.CO_tb_Usuarios

@{
	ViewBag.Title = "Cambio de Password";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 jumbotron" style="color:#000000; font:caption; background-color:azure;">
	<h2>Datos del usuario conectado</h2>


	@Html.AntiForgeryToken()

	<h4>Cambio de la contraseña</h4>
	<hr />
	<div class="form-horizontal">
		@using (Html.BeginForm())
		{
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.IdUsuario)

			<div class="form-group row">
				@Html.LabelFor(model => model.IdRol, "IdRol", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("IdRol", null, htmlAttributes: new { @id = "IdRol", @class = "form-control", @disabled = "disabled" })
					@Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control TmpNom", @disabled = "disabled" } })
					@Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control TmpCorreo", @disabled = "disabled" } })
					@Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
				</div>
			</div>


			<div class="form-group row">
				@Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("Estatus", (IEnumerable<SelectListItem>)ViewBag.Roles, "", new { @class = "form-control TmpEstatus", @disabled = "disabled" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.PasswordFor(model => model.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group row">
				@Html.LabelFor(model => model.ConfirmaPass, new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.PasswordFor(model => model.ConfirmaPass, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ConfirmaPass, "", new { @class = "text-danger" })
				</div>
			</div>




			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Grabar" class="btn btn-default" style="height:25Px; text-align:inherit" />
					@Html.ActionLink("Regresar", "Index", "CambiarPassword", null, new { @class = "btn btn-default btn-lg", @style = "display:inline" })
				</div>
			</div>
		}
	</div>

</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")


	<script>
	$(document).ready(function ()
	{
		$("#TmpRol").attr('readonly', true);
		$("#TmpNom").attr('readonly', true);
		$("#TmpCorreo").attr('readonly', true);
		$("#TmpEstatus").attr('readonly', true);
	}
	</script>
}
