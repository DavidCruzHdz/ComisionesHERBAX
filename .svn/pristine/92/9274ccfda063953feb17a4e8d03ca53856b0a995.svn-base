namespace Comisiones.Controllers
{
    using Comisiones.Models;
    using SpreadsheetLight;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Web;
    using System.Web.Mvc;
    using Entidades;

    public class ComisionesController : Controller
    {
        private static NLog.Logger logger = NLog.LogManager.GetCurrentClassLogger();
        
        // GET: Comisiones
        public ActionResult Index()
        {
            return View();
        }
/*       
        public ActionResult DescargaArchivoAsimilado(string tipoConsulta, int compania)
        {
            string filePath = @"C:\herbax\archivos\";
            List<CO_st_registrosPago_pr_Result> listRegistrosPago = new List<CO_st_registrosPago_pr_Result>();

             listRegistrosPago = Data.Comisiones.dataComisiones.instance.CO_st_registrosPago_pr(tipoConsulta,  compania);

            listRegistrosPago.ForEach(i => {
                i.Banco
            }


            //var json = Json(_Lcomisiones, JsonRequestBehavior.AllowGet);
            //json.MaxJsonLength = 500000000;

            return File(filePath, "application/force-download", Path.GetFileName(filePath));
        }
*/

        public ActionResult DescargaArchivoAsimilado(string tipoConsulta, int compania)
        {

            string filePath = @"C:\herbax\archivos\";
            var strBuilder = new StringBuilder();

            logger.Info("RUTA DOMINIO DIRECTORIO ->" + AppDomain.CurrentDomain.BaseDirectory);

            Int32 folioCalculo = 0;
            Int32 countReg = 2;
            string tipoRegEncabezado = "1";
            string tipoRegDatos = "2";
            string tipoRegControl = "3";
            string versionLayout = "A1";

            


            Int32 countMovimientos = 0;
            decimal importeTotalAbonos = 0;

            string strC1 = "C1";
            string strC2 = "C2";
            string strC3 = "C3";
            string strC4 = "C4";
            string strC5 = "C5";
            string strC6 = "C6";
            string nombreArchivo = "sinInformacion.xlsx";

            DateTime currentDate = DateTime.Now;

            String fechaActual = currentDate.ToString("yy/MM/dd");
            String fechaArchivo = currentDate.ToString("yyyyMMdd_hhmmss");

            MemoryStream ms = new MemoryStream();

            if (tipoConsulta != null)
            {
                if (tipoConsulta.Equals(strC1))
                {
                    if (compania == 1)
                    {
                        nombreArchivo = "asimiladosSaba"+ fechaArchivo+".xlsx";
                    }

                    if (compania == 2)
                    {
                        nombreArchivo = "asimiladosIkos" + fechaArchivo + ".xlsx";
                    }
                }
                if (tipoConsulta.Equals(strC2))
                {
                    if (compania == 1)
                    {
                        nombreArchivo = "facturaSaba" + fechaArchivo + ".xlsx";
                    }

                    if (compania == 2)
                    {
                        nombreArchivo = "facturaIkos" + fechaArchivo + ".xlsx";
                    }
                }
                if (tipoConsulta.Equals(strC3))
                {
                    nombreArchivo = "asimiladosGuatemala" + fechaArchivo + ".xlsx";

                }
                if (tipoConsulta.Equals(strC4))
                {
                    nombreArchivo = "FacturaGuatemala" + fechaArchivo + ".xlsx";
                }
                if (tipoConsulta.Equals(strC5))
                {
                    nombreArchivo = "asimiladosEu" + fechaArchivo + ".xlsx";
                }
                if (tipoConsulta.Equals(strC6))
                {
                    nombreArchivo = "FacturaEu" + fechaArchivo + ".xlsx";

                }
            }

            filePath = filePath + nombreArchivo;

            try
            {
                List<CO_st_registrosPago_pr_Result> listRegistrosPago = new List<CO_st_registrosPago_pr_Result>();

                /*Se cambio la manera de consultar ya que EntityFramework no obtenia los datos
                  using (herbaxEntities hbxEntities = new herbaxEntities())
                {
                    listRegistrosPago = hbxEntities.CO_st_registrosPago_pr(tipoConsulta, compania).ToList();
                }*/
                listRegistrosPago = Data.Comisiones.dataComisiones.instance.CO_st_registrosPago_pr(tipoConsulta, compania);


                SLDocument oSLDocument = new SLDocument();

                //Write encabezado
                //folioCalculo = Convert.ToInt32(parametro.valor);
                oSLDocument.SetCellValue(1, 1, "Tipo de Registro");
                oSLDocument.SetCellValue(1, 2, "No de Identificación del archivo");
                oSLDocument.SetCellValue(1, 3, "Fecha de Envio");
                oSLDocument.SetCellValue(1, 4, "Versión del Layout");
                oSLDocument.SetCellValue(1, 5, "Tipo de Registro");
                oSLDocument.SetCellValue(1, 6, "RFC");
                oSLDocument.SetCellValue(1, 7, "CURP");
                oSLDocument.SetCellValue(1, 8, "Email");
                oSLDocument.SetCellValue(1, 9, "Importe");
                oSLDocument.SetCellValue(1, 10, "Nombre");
                oSLDocument.SetCellValue(1, 11, "Clabe");
                oSLDocument.SetCellValue(1, 12, "Banco");
                oSLDocument.SetCellValue(1, 13, "Cuenta");
                oSLDocument.SetCellValue(1, 14, "Periodo");
                oSLDocument.SetCellValue(1, 15, "Id_Distribuidor");
                oSLDocument.SetCellValue(1, 16, "Tipo de Registro");
                oSLDocument.SetCellValue(1, 17, "Numero de Movimientos");
                oSLDocument.SetCellValue(1, 18, "Importe total de abonos");
                oSLDocument.SetCellValue(1, 19, "Iva del importe total");

                if (listRegistrosPago != null || listRegistrosPago.Count > 0)
                {

                    if (System.IO.File.Exists(filePath))
                    {
                        System.IO.File.Delete(filePath);
                    }

                    CO_tb_Parametro parametro = new CO_tb_Parametro();

                    // buscar folio actual del proceso de calculo y generación archivos de pago
                    using (herbaxEntities herbaxEntities = new herbaxEntities())
                    {

                        parametro = (from param in herbaxEntities.CO_tb_Parametro
                                     where param.parametro == "FOLIO_CALCULO"
                                     select param).SingleOrDefault();
                    }



                    countReg = 2;
                    System.Globalization.CultureInfo c = new System.Globalization.CultureInfo("es-MX");
                    System.Globalization.DateTimeFormatInfo format = c.DateTimeFormat;

                    listRegistrosPago.ForEach(i =>
                    {
                        oSLDocument.SetCellValue(countReg, 1, i.TipoRegistro);
                        oSLDocument.SetCellValue(countReg, 2, i.NoIdentificacionArchivo);//
                        if (i.FechaEnvio != null) oSLDocument.SetCellValue(countReg, 3, i.FechaEnvio.ToString("D", format));
                        oSLDocument.SetCellValue(countReg, 4, i.VersionLayout);
                        oSLDocument.SetCellValue(countReg, 5, i.TipoRegistroDet);
                        oSLDocument.SetCellValue(countReg, 6, i.Rfc);//
                        oSLDocument.SetCellValue(countReg, 7, i.Curp);//
                        oSLDocument.SetCellValue(countReg, 8, i.Email);//
                        oSLDocument.SetCellValue(countReg, 9, i.Importe);
                        oSLDocument.SetCellValue(countReg, 10, i.Nombre);
                        oSLDocument.SetCellValue(countReg, 11, i.Clabe);
                        oSLDocument.SetCellValue(countReg, 12, i.Banco);
                        oSLDocument.SetCellValue(countReg, 13, i.Cuenta);
                        if (i.Periodo != null) oSLDocument.SetCellValue(countReg, 14, i.Periodo);
                        oSLDocument.SetCellValue(countReg, 15, i.id_Distribuidor);
                        oSLDocument.SetCellValue(countReg, 16, i.TipoRegistroCtrl);
                        if (i.NoMovimientos != null) oSLDocument.SetCellValue(countReg, 17, i.NoMovimientos);
                        if (i.ImpTotalAbonos != null) oSLDocument.SetCellValue(countReg, 18, i.ImpTotalAbonos);
                        if (i.IvaDelimTotal != null) oSLDocument.SetCellValue(countReg, 19, i.IvaDelimTotal);

                        //SLStyle style = oSLDocument.CreateStyle();
                        //style.Font.FontName = "Arial";
                        //style.Font.FontSize = 10;
                        //style.Font.FontColor = System.Drawing.Color.Blue;
                        ////style.SetGradientFill(SLGradientShadingStyleValues.Horizontal2, SLThemeColorIndexValues.Accent3Color, SLThemeColorIndexValues.Accent3Color);
                        //style.Font.Bold = true;



                        countReg++;
                    });
                    ///HHM
                    //SLConditionalFormatting cf = new SLConditionalFormatting(2, 1, countReg, 19);
                    //cf.SetDataBar(SLConditionalFormatDataBarValues.LightBlue);
                    //oSLDocument.AddConditionalFormatting(cf);

                    //SLPageSettings ps = new SLPageSettings();
                    //SLFont ft = oSLDocument.CreateFont();
                    //ft.SetFont("Arial", 16);
                    //ft.SetFontThemeColor(SLThemeColorIndexValues.Accent1Color);

                    string[] _lstColumns = new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U" };
                    for (int _index = 0; _index < _lstColumns.Length; _index++)
                    {
                        SLStyle style1 = oSLDocument.CreateStyle();
                        style1.Font.FontName = "Arial";
                        style1.Font.FontSize = 11;
                        style1.Font.FontColor = System.Drawing.Color.White;
                        //style1.SetGradientFill(SLGradientShadingStyleValues.Horizontal2, SLThemeColorIndexValues.Accent3Color, SLThemeColorIndexValues.Accent3Color);
                        style1.SetGradientFill(SLGradientShadingStyleValues.Horizontal2, System.Drawing.Color.LightSeaGreen, System.Drawing.Color.MediumAquamarine);
                        style1.Font.Bold = true;
                        //style.Font.Italic = true;
                        //style.Font.Strike = true;
                        //style.Font.Underline = UnderlineValues.Double;
                        oSLDocument.SetCellStyle(_lstColumns[_index] + "1", style1);
                        style1 = null;

                        ///Detalle
                        for (int _indexDet = 2; _indexDet < listRegistrosPago.Count + 2; _indexDet++)
                        {
                            SLStyle style = oSLDocument.CreateStyle();
                            style.Font.FontName = "Arial";
                            style.Font.FontSize = 9;
                            style.Font.FontColor = System.Drawing.Color.DimGray;
                            style.Font.Bold = true;
                            oSLDocument.SetCellStyle(_lstColumns[_index] + _indexDet, style);
                            style = null;
                        }
                    }

                    listRegistrosPago = null;
                    

                    oSLDocument.SaveAs(filePath);




                }//fin del si trae datos
                else {
                    oSLDocument.SetCellValue(2, 1, "No se encontraron datos");
                    oSLDocument.SaveAs(filePath);
                }
                
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }

            return File(filePath, "application/force-download", Path.GetFileName(filePath));
            ///return File(ms, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "prueba_excel.xlsx");

        }



    }
}